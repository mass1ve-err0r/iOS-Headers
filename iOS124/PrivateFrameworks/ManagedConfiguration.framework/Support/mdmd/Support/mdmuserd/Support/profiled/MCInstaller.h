//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <ManagedConfiguration/MCInstallerReader.h>

#import "MCInteractionClientDelegate-Protocol.h"

@class FLFollowUpController, NSDictionary, NSMutableArray, NSMutableDictionary, NSObject, NSTimer;
@protocol OS_dispatch_queue;

@interface MCInstaller : MCInstallerReader <MCInteractionClientDelegate>
{
    NSMutableArray *_queuedProfiles;
    NSMutableArray *_queuedProvisioningProfiles;
    NSObject<OS_dispatch_queue> *_purgatoryWorkerQueue;
    NSDictionary *_currentlyInstallingRestrictions;
    NSMutableDictionary *_setAsideAccountIdentifiersByPayloadClass;
    FLFollowUpController *_followUpController;
    NSTimer *_purgatoryTimer;
}

+ (void)_enumerateProfilesWithCriteria:(CDUnknownBlockType)arg1 filterFlags:(int)arg2 block:(CDUnknownBlockType)arg3;
+ (void)considerProfilesInstalledDuringBuddyForManagement;
+ (id)_installationFailureErrorWithUnderlyingError:(id)arg1;
+ (void)_setPathsSystemProfileStorageDirectory:(id)arg1 userProfileStorageDirectory:(id)arg2;
+ (id)notInstalledByMDMError;
+ (id)deviceNotSupervisedError;
+ (id)sharedInstaller;
@property(retain, nonatomic) NSTimer *purgatoryTimer; // @synthesize purgatoryTimer=_purgatoryTimer;
@property(retain, nonatomic) FLFollowUpController *followUpController; // @synthesize followUpController=_followUpController;
@property(retain, nonatomic) NSMutableDictionary *setAsideAccountIdentifiersByPayloadClass; // @synthesize setAsideAccountIdentifiersByPayloadClass=_setAsideAccountIdentifiersByPayloadClass;
- (void).cxx_destruct;
- (id)peekProfileDataFromPurgatoryForDeviceType:(unsigned long long)arg1;
- (id)popProfileDataFromPurgatoryForDeviceType:(unsigned long long)arg1;
- (void)_purgatoryWorkerQueue_resetProfilePurgatorySettingsAndPostProfileListChangedNotification:(_Bool)arg1;
- (void)purgeProfileWithIdentifier:(id)arg1 FromPurgatoryForTargetDeviceType:(unsigned long long)arg2;
- (void)purgeProfilesFromPurgatoryForTargetDeviceType:(unsigned long long)arg1;
- (void)sendProfileData:(id)arg1 withIdentifier:(id)arg2 toPurgatoryForTargetDeviceType:(unsigned long long)arg3;
- (id)_installedProfileWithIdentifier:(id)arg1 installationType:(long long)arg2;
- (void)recomputeProfileRestrictions;
- (void)cleanUp;
- (void)removeManagedProfilesIfNecessary;
- (void)removeUninstalledProfileWithIdentifier:(id)arg1 installationType:(long long)arg2 targetDeviceType:(unsigned long long)arg3;
- (void)removeProfileWithIdentifier:(id)arg1 installationType:(long long)arg2;
- (void)_cleanUpAfterRemovingProfileWithIdentifier:(id)arg1 installedForUser:(_Bool)arg2 profileHandler:(id)arg3 oldRestrictions:(id)arg4;
- (void)_reallyRemoveProfileWithIdentifier:(id)arg1 installationType:(long long)arg2 profileInstalled:(_Bool)arg3 targetDeviceType:(unsigned long long)arg4;
- (void)removeAllProfilesFromInstallationQueue;
- (id)_managingProfileIdentifierForProfileIdentifier:(id)arg1;
- (void)_removeOrphanedResources;
- (_Bool)interactionClient:(id)arg1 didRequestPreflightUserInputResponses:(id)arg2 forPayloadIndex:(unsigned long long)arg3 outError:(id *)arg4;
- (id)updateProfileWithIdentifier:(id)arg1 interactionClient:(id)arg2 installForSystem:(_Bool)arg3 outError:(id *)arg4;
- (id)updateProfileWithIdentifier:(id)arg1 interactionClient:(id)arg2 outError:(id *)arg3;
- (id)_profileNotEligibleErrorWithProfile:(id)arg1;
- (id)preflightProfileForInstallationOnWatch:(id)arg1;
- (id)preflightProfileForInstallationOnHomePod:(id)arg1;
- (id)installProfileData:(id)arg1 options:(id)arg2 interactionClient:(id)arg3 outError:(id *)arg4;
- (id)existingProfileContainingPayloadClass:(Class)arg1 inProfilesWithFilterFlags:(int)arg2 excludingProfileIdentifier:(id)arg3;
- (id)existingProfileContainingPayloadClass:(Class)arg1 excludingProfileIdentifier:(id)arg2;
- (_Bool)_showWarnings:(id)arg1 interactionClient:(id)arg2 outError:(id *)arg3;
- (_Bool)_showWarningsForUpdatingProfile:(id)arg1 originalProfile:(id)arg2 interactionClient:(id)arg3 outError:(id *)arg4;
- (_Bool)_showWarningsForProfile:(id)arg1 interactionClient:(id)arg2 outError:(id *)arg3;
- (id)setAsideAccountIdentifiersForPayloadClass:(Class)arg1;
- (void)addSetAsideAccountIdentifier:(id)arg1 forPayloadClass:(Class)arg2;
- (_Bool)deviceSupervisionRequiredForPayload:(id)arg1;
- (id)_installProfileHandler:(id)arg1 options:(id)arg2 interactionClient:(id)arg3 outError:(id *)arg4;
- (id)_deviceLockedError;
- (_Bool)_checkForMDMReplacementNewProfile:(id)arg1 options:(id)arg2 outIsMDMReplacement:(_Bool *)arg3 oldProfile:(id)arg4 client:(id)arg5 outError:(id *)arg6;
- (_Bool)_promptUserForComplianceWithRestrictions:(id)arg1 handler:(id)arg2 interactionClient:(id)arg3 outError:(id *)arg4;
- (id)_userCancelledErrorWithFriendlyName:(id)arg1;
- (id)_invalidInputError;
- (id)_installationHaltedTopLevelError;
- (id)_uiProfileInstallationDisabledTopLevelError;
- (id)_targetDeviceInvalidError;
- (id)_targetDeviceUnavailableError;
- (id)_targetDeviceErrorWithUnderlyingError:(id)arg1;
- (id)_malformedPayloadErrorWithUnderlyingError:(id)arg1;
- (id)_malformedPayloadErrorInternal:(_Bool)arg1;
- (id)_queueProfileData:(id)arg1 profile:(id)arg2 forDevice:(unsigned long long)arg3;
- (void)queueProfileDataForInstallation:(id)arg1 originalFileName:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)popProvisioningProfileDataAtHeadOfInstallationQueue;
- (_Bool)queueProvisioningProfileDataForInstallation:(id)arg1 outError:(id *)arg2;
- (id)_badProvisioningProfileError;
- (id)popProfileDataAtHeadOfInstallationQueue;
- (id)pathToInstalledProfileByUUID:(id)arg1;
- (id)pathToUninstalledProfileByIdentifier:(id)arg1 installationType:(long long)arg2 targetDeviceType:(unsigned long long)arg3;
- (id)pathToInstalledProfileByIdentifier:(id)arg1 installationType:(long long)arg2;
- (id)identifiersOfInstalledProfilesWithFilterFlags:(int)arg1;
- (id)init;

@end

