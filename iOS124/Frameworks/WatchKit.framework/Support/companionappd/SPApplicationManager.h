//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NPSDomainAccessor, NSMutableDictionary, NSMutableSet, NSString;
@protocol OS_dispatch_queue;

@interface SPApplicationManager : NSObject
{
    _Bool _domainVerified;
    long long _installationMode;
    NSString *_currentXcodeControlledPlugin;
    NPSDomainAccessor *_watchKitAppsDomain;
    NSMutableDictionary *_continuouslyDiscoveredPlugins;
    CDUnknownBlockType _pluginsFoundBlock;
    NSObject<OS_dispatch_queue> *_pkPluginManagementQueue;
    NSObject<OS_dispatch_queue> *_pkPluginCompletionQueue;
    NSObject<OS_dispatch_queue> *_pkPluginBeginUsingTimerQueue;
    NSMutableDictionary *_pkPluginBeginUsingTimers;
    id _wkContinuousDiscoveryToken;
    id _domainUpdateLock;
    NSMutableSet *_companionAppIDsInstalledViaXcode;
    id _companionAppIDsInstalledViaXcodeLock;
    NSMutableSet *_extensionsKilledDueToAppDeath;
    NSObject<OS_dispatch_queue> *_extensionsKilledDueToAppDeathAccessQueue;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *extensionsKilledDueToAppDeathAccessQueue; // @synthesize extensionsKilledDueToAppDeathAccessQueue=_extensionsKilledDueToAppDeathAccessQueue;
@property(retain, nonatomic) NSMutableSet *extensionsKilledDueToAppDeath; // @synthesize extensionsKilledDueToAppDeath=_extensionsKilledDueToAppDeath;
@property(retain, nonatomic) id companionAppIDsInstalledViaXcodeLock; // @synthesize companionAppIDsInstalledViaXcodeLock=_companionAppIDsInstalledViaXcodeLock;
@property(retain, nonatomic) NSMutableSet *companionAppIDsInstalledViaXcode; // @synthesize companionAppIDsInstalledViaXcode=_companionAppIDsInstalledViaXcode;
@property(retain, nonatomic) id domainUpdateLock; // @synthesize domainUpdateLock=_domainUpdateLock;
@property(retain, nonatomic) id wkContinuousDiscoveryToken; // @synthesize wkContinuousDiscoveryToken=_wkContinuousDiscoveryToken;
@property(retain, nonatomic) NSMutableDictionary *pkPluginBeginUsingTimers; // @synthesize pkPluginBeginUsingTimers=_pkPluginBeginUsingTimers;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *pkPluginBeginUsingTimerQueue; // @synthesize pkPluginBeginUsingTimerQueue=_pkPluginBeginUsingTimerQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *pkPluginCompletionQueue; // @synthesize pkPluginCompletionQueue=_pkPluginCompletionQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *pkPluginManagementQueue; // @synthesize pkPluginManagementQueue=_pkPluginManagementQueue;
@property(copy, nonatomic) CDUnknownBlockType pluginsFoundBlock; // @synthesize pluginsFoundBlock=_pluginsFoundBlock;
@property(retain, nonatomic) NSMutableDictionary *continuouslyDiscoveredPlugins; // @synthesize continuouslyDiscoveredPlugins=_continuouslyDiscoveredPlugins;
@property _Bool domainVerified; // @synthesize domainVerified=_domainVerified;
@property(retain, nonatomic) NPSDomainAccessor *watchKitAppsDomain; // @synthesize watchKitAppsDomain=_watchKitAppsDomain;
@property(copy) NSString *currentXcodeControlledPlugin; // @synthesize currentXcodeControlledPlugin=_currentXcodeControlledPlugin;
@property long long installationMode; // @synthesize installationMode=_installationMode;
- (void).cxx_destruct;
- (void)saveGizmoBuildVersion:(id)arg1;
- (id)savedGizmoBuildVersion;
- (void)notifyInactiveForPluginWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)notifyActiveForPluginWithIdentifier:(id)arg1;
- (_Bool)pluginHasFinishedBeginUsing:(id)arg1;
- (void)markPluginWithIdentifierNeedsBeginUsing:(id)arg1;
- (void)discoverPlugInForIdentifier:(id)arg1 found:(CDUnknownBlockType)arg2;
- (void)discoverAllPlugIns:(CDUnknownBlockType)arg1;
- (void)updateCoreDuetSession:(id)arg1;
- (void)clearXcodeWillInstallSockPuppetAppWithCompanionAppIDState:(id)arg1;
- (_Bool)willXcodeInstallSockPuppetAppWithCompanionAppID:(id)arg1;
- (void)xcodeWillInstallSockPuppetAppWithCompanionAppID:(id)arg1;
- (void)fetchInstalledApplicationsWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)applicationContainsWK1Application:(id)arg1;
- (_Bool)applicationContainsWK2Application:(id)arg1;
- (void)stopUsingPluginIfNecessary:(id)arg1;
- (id)identifierForPluginProxy:(id)arg1;
- (id)pluginIdentifierForProtocolIdentifier:(id)arg1;
- (id)gizmoApplicationInfoWithIdentifier:(id)arg1;
- (id)gizmoPersistentDomain;
- (void)handleInstallationsReportedByLaunchServices:(id)arg1;
- (void)installedApplicationsChanged;
- (_Bool)wasExtensionKilledDueToAppDeath:(id)arg1;
- (void)setExtension:(id)arg1 wasKilledDueToAppDeath:(_Bool)arg2;
- (void)getOrBeginActivePlugInForApplication:(id)arg1 setupBlock:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
- (void)beginUsingPlugin:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)waitForPreviousPluginToFinishEnding:(id)arg1 toComplete:(CDUnknownBlockType)arg2;
- (void)callEndUsingCompletionsForPluginWithIdentifier:(id)arg1;
- (void)registerForContinuousPluginDiscovery;
- (id)init;

@end

